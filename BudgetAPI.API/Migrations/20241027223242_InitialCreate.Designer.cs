// <auto-generated />
using System;
using Entity.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetAPI.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20241027223242_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Entity.Entities.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedBy = -1,
                            DateAdded = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8881),
                            DateUpdated = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8882),
                            IsDeleted = false,
                            Name = "test",
                            UpdatedBy = -1
                        });
                });

            modelBuilder.Entity("Entity.Entities.Entry", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddedBy")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Amount")
                        .HasColumnType("REAL");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Entrys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedBy = -1,
                            Amount = 1.0,
                            CategoryId = 0,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateAdded = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8892),
                            DateUpdated = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8893),
                            Description = "test",
                            IsDeleted = false,
                            UpdatedBy = -1
                        });
                });

            modelBuilder.Entity("Entity.Entities.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddedBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedBy = -1,
                            DateAdded = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8773),
                            DateUpdated = new DateTime(2024, 10, 27, 18, 32, 41, 889, DateTimeKind.Local).AddTicks(8814),
                            IsDeleted = false,
                            Password = "test",
                            UpdatedBy = -1,
                            Username = "test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
